<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\PWM_Capture.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\PWM_Capture.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri May 03 00:29:43 2019
<BR><P>
<H3>Maximum Stack Usage =        180 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; PWM_ConfigOutputChannel &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[d]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ACMP_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[23]">ADC_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[6]">BOD_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[1a]">CAN0_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[1b]">CAN1_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[d]">Default_Handler</a> from startup_nuc123.o(.text) referenced 2 times from startup_nuc123.o(RESET)
 <LI><a href="#[8]">EINT0_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[9]">EINT1_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[a]">GPAB_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[b]">GPCDF_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from retarget.o(.emb_text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[26]">Hard_Fault_Handler</a> from retarget.o(i.Hard_Fault_Handler) referenced from retarget.o(.emb_text)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[21]">I2S_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[20]">PDMA_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[1e]">PS2_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[c]">PWMA_IRQHandler</a> from main.o(i.PWMA_IRQHandler) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[22]">PWRWU_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[24]">RTC_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[2a]">Reset_Handler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[1c]">SC012_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[14]">SPI0_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[15]">SPI1_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[16]">SPI2_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[17]">SPI3_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_nuc123.o(i.SystemInit) referenced from startup_nuc123.o(.text)
 <LI><a href="#[e]">TMR0_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[f]">TMR1_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[10]">TMR2_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[11]">TMR3_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[1d]">USBD_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[7]">WDT_IRQHandler</a> from startup_nuc123.o(.text) referenced from startup_nuc123.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_nuc123.o(.text)
 <LI><a href="#[29]">fputc</a> from retarget.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[25]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[36]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[5b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[5c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[5d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[5e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, retarget.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_nuc123.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPAB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPCDF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SC012_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigCaptureChannel
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalPeriodTime
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigCaptureChannel
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalPeriodTime
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalPeriodTime
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalPeriodTime
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[62]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[30]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[64]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[65]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableModuleClock))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[37]"></a>CLK_EnablePLL</STRONG> (Thumb, 348 bytes, Stack size 40 bytes, clk.o(i.CLK_EnablePLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CLK_EnablePLL &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
</UL>

<P><STRONG><a name="[47]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableXtalRC))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3b]"></a>CLK_SetCoreClock</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, clk.o(i.CLK_SetCoreClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CLK_SetCoreClock &rArr; CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3c]"></a>CLK_SetHCLK</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, clk.o(i.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[49]"></a>CLK_SetModuleClock</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, clk.o(i.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[38]"></a>CLK_WaitClockReady</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, clk.o(i.CLK_WaitClockReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_WaitClockReady
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3e]"></a>CalPeriodTime</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, main.o(i.CalPeriodTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CalPeriodTime &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_GetCaptureIntFlag
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ClearCaptureIntFlag
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>Delay</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.Delay))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>Hard_Fault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, retarget.o(i.Hard_Fault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hard_Fault_Handler &rArr; stackDump &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> retarget.o(.emb_text)
</UL>
<P><STRONG><a name="[c]"></a>PWMA_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.PWMA_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>PWM_ClearCaptureIntFlag</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, pwm.o(i.PWM_ClearCaptureIntFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PWM_ClearCaptureIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalPeriodTime
</UL>

<P><STRONG><a name="[43]"></a>PWM_ConfigCaptureChannel</STRONG> (Thumb, 256 bytes, Stack size 152 bytes, pwm.o(i.PWM_ConfigCaptureChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = PWM_ConfigCaptureChannel &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>PWM_ConfigOutputChannel</STRONG> (Thumb, 292 bytes, Stack size 152 bytes, pwm.o(i.PWM_ConfigOutputChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = PWM_ConfigOutputChannel &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>PWM_DisableCapture</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, pwm.o(i.PWM_DisableCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PWM_DisableCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>PWM_DisableOutput</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pwm.o(i.PWM_DisableOutput))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>PWM_EnableCapture</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, pwm.o(i.PWM_EnableCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PWM_EnableCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>PWM_EnableCaptureInt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pwm.o(i.PWM_EnableCaptureInt))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>PWM_EnableOutput</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pwm.o(i.PWM_EnableOutput))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>PWM_ForceStop</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, pwm.o(i.PWM_ForceStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PWM_ForceStop
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>PWM_GetCaptureIntFlag</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, pwm.o(i.PWM_GetCaptureIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalPeriodTime
</UL>

<P><STRONG><a name="[52]"></a>PWM_Start</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, pwm.o(i.PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PWM_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>PWM_Stop</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, pwm.o(i.PWM_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PWM_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>SYS_Init</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, main.o(i.SYS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SYS_Init &rArr; CLK_SetCoreClock &rArr; CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>SYS_ResetModule</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sys.o(i.SYS_ResetModule))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[4f]"></a>SendChar_ToUART</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, retarget.o(i.SendChar_ToUART))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[3d]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, system_nuc123.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigCaptureChannel
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_nuc123.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>UART0_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.UART0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART0_Init &rArr; UART_Open &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>UART_Open</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, uart.o(i.UART_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UART_Open &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[4d]"></a>__0printf$5</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[66]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[41]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalPeriodTime
</UL>

<P><STRONG><a name="[35]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[67]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[68]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[69]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[29]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = main &rArr; PWM_ConfigOutputChannel &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Stop
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Start
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ForceStop
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EnableOutput
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EnableCaptureInt
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EnableCapture
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_DisableOutput
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_DisableCapture
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigOutputChannel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ConfigCaptureChannel
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ClearCaptureIntFlag
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalPeriodTime
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc123.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc123.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>stackDump</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, retarget.o(i.stackDump))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = stackDump &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
</UL>

<P><STRONG><a name="[3a]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, uart.o(i.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLK_GetPLLClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
</UL>

<P><STRONG><a name="[4e]"></a>_printf_core</STRONG> (Thumb, 688 bytes, Stack size 96 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
